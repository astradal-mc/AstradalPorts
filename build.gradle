plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'net.astradal'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")

    compileOnly 'com.github.TownyAdvanced:Towny:0.101.2.1'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7.1"
    compileOnly("org.xerial:sqlite-jdbc:3.50.3.0")

    //tests

    testImplementation("org.mockbukkit.mockbukkit:mockbukkit-v1.21:4.72.6")

    testImplementation(platform('org.junit:junit-bom:5.13.4'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

    testImplementation("org.mockito:mockito-junit-jupiter:5.12.0")

    testImplementation("org.xerial:sqlite-jdbc:3.50.3.0")
    testImplementation 'org.slf4j:slf4j-simple:2.0.7'
    testImplementation('com.github.TownyAdvanced:Towny:0.101.2.1')
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
    filesMatching('config.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
    jvmArgs '-XX:+EnableDynamicAgentLoading'
}
